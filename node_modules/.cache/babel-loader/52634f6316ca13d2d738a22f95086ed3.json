{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mormad/Documents/sandogh/client/src/components/addUserInfoInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\n\nconst AddUserInfoInput = ({\n  getValue,\n  title,\n  label,\n  placeholder,\n  p,\n  className,\n  type,\n  required,\n  changeHed,\n  min,\n  max,\n  step,\n  value,\n  addUserInfo\n}) => {\n  _s();\n\n  const [name, setName] = useState(value);\n  const [hed, setHed] = useState('');\n  useEffect(() => {\n    if (changeHed) {\n      changeHed(hed);\n    }\n  }, [hed]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [title, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"login-input info-input\" + className,\n      onChange: e => {\n        setName(e.target.value);\n        getValue(e.target.value);\n        console.log(e.target.value);\n      },\n      onBlur: e => {\n        setHed( /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"addUserInfo-p\",\n          children: e.target.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 18\n        }, this));\n\n        if (e.target.value == '') {\n          setHed('');\n        }\n      },\n      value: name,\n      type: type,\n      placeholder: placeholder,\n      min: min,\n      max: max,\n      step: step,\n      ...required\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"addUserInfo-name-p\",\n      children: p\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddUserInfoInput, \"g39BMBDNjUAtsgrubdmMNhKkqv0=\");\n\n_c = AddUserInfoInput;\nexport default AddUserInfoInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddUserInfoInput\");","map":{"version":3,"sources":["/home/mormad/Documents/sandogh/client/src/components/addUserInfoInput.js"],"names":["React","useState","useEffect","AddUserInfoInput","getValue","title","label","placeholder","p","className","type","required","changeHed","min","max","step","value","addUserInfo","name","setName","hed","setHed","e","target","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,KAAX;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA,WAAzB;AAAsCC,EAAAA,CAAtC;AAAyCC,EAAAA,SAAzC;AAAoDC,EAAAA,IAApD;AAA0DC,EAAAA,QAA1D;AAAoEC,EAAAA,SAApE;AAA+EC,EAAAA,GAA/E;AAAoFC,EAAAA,GAApF;AAAyFC,EAAAA,IAAzF;AAA+FC,EAAAA,KAA/F;AAAsGC,EAAAA;AAAtG,CAAD,KAAwH;AAAA;;AAC/I,QAAK,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,QAAQ,CAACe,KAAD,CAA/B;AACA,QAAK,CAACI,GAAD,EAAMC,MAAN,IAAgBpB,QAAQ,CAAC,EAAD,CAA7B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIU,SAAJ,EAAe;AACbA,MAAAA,SAAS,CAACQ,GAAD,CAAT;AACD;AACF,GAJQ,EAIP,CAACA,GAAD,CAJO,CAAT;AAMA,sBACE;AAAA,4BACE;AAAA,iBAAKf,KAAL,oBAAY;AAAA,kBAAOC;AAAP;AAAA;AAAA;AAAA;AAAA,cAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAE,2BAAyBG,SADtC;AAEE,MAAA,QAAQ,EAAGa,CAAD,IAAO;AACfH,QAAAA,OAAO,CAACG,CAAC,CAACC,MAAF,CAASP,KAAV,CAAP;AACAZ,QAAAA,QAAQ,CAACkB,CAAC,CAACC,MAAF,CAASP,KAAV,CAAR;AACAQ,QAAAA,OAAO,CAACC,GAAR,CAAYH,CAAC,CAACC,MAAF,CAASP,KAArB;AACD,OANH;AAOE,MAAA,MAAM,EAAGM,CAAD,IAAO;AACbD,QAAAA,MAAM,eAAC;AAAG,UAAA,SAAS,EAAC,eAAb;AAAA,oBAA8BC,CAAC,CAACC,MAAF,CAASP;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAAD,CAAN;;AACA,YAAIM,CAAC,CAACC,MAAF,CAASP,KAAT,IAAkB,EAAtB,EAA0B;AACxBK,UAAAA,MAAM,CAAC,EAAD,CAAN;AACD;AACF,OAZH;AAaE,MAAA,KAAK,EAAEH,IAbT;AAcE,MAAA,IAAI,EAAER,IAdR;AAeE,MAAA,WAAW,EAAEH,WAff;AAgBE,MAAA,GAAG,EAAEM,GAhBP;AAiBE,MAAA,GAAG,EAAEC,GAjBP;AAkBE,MAAA,IAAI,EAAEC,IAlBR;AAAA,SAmBMJ;AAnBN;AAAA;AAAA;AAAA;AAAA,YAFF,eAuBE;AAAG,MAAA,SAAS,EAAC,oBAAb;AAAA,gBAAmCH;AAAnC;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AA2BD,CArCD;;GAAML,gB;;KAAAA,gB;AAuCN,eAAeA,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nconst AddUserInfoInput = ({getValue, title, label, placeholder, p, className, type, required, changeHed, min, max, step, value, addUserInfo}) => {\n  const[name, setName] = useState(value);\n  const[hed, setHed] = useState('');\n\n  useEffect(() => {\n    if (changeHed) {\n      changeHed(hed);\n    }\n  },[hed])\n\n  return (\n    <>\n      <h3>{title} <span>{label}</span></h3>\n      <input\n        className={\"login-input info-input\"+className}\n        onChange={(e) => {\n          setName(e.target.value);\n          getValue(e.target.value)\n          console.log(e.target.value);\n        }}\n        onBlur={(e) => {\n          setHed(<p className=\"addUserInfo-p\">{e.target.value}</p>);\n          if (e.target.value == '') {\n            setHed('')\n          }\n        }}\n        value={name}\n        type={type}\n        placeholder={placeholder}\n        min={min}\n        max={max}\n        step={step}\n        {...required}\n      />\n      <p className=\"addUserInfo-name-p\">{p}</p>\n    </>\n      )\n}\n\nexport default AddUserInfoInput;\n"]},"metadata":{},"sourceType":"module"}