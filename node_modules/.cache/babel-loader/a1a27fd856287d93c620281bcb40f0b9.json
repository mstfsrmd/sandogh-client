{"ast":null,"code":"\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar typpy = require(\"typpy\"),\n    Deffy = require(\"deffy\");\n\nvar Ul = module.exports = {\n  /**\n   * merge\n   * One level merge. Faster than `deepMerge`.\n   *\n   * @name merge\n   * @function\n   * @param dst {Object} The destination object.\n   * @param src {Object} The source object (usually defaults).\n   * @return {Object} The result object.\n   */\n  merge: function merge(dst, src, p) {\n    var res = {};\n    src = Deffy(src, {});\n    dst = Deffy(dst, {});\n\n    for (var k in src) {\n      res[k] = src[k];\n    }\n\n    for (var _k in dst) {\n      if (undefined === dst[_k]) {\n        continue;\n      }\n\n      res[_k] = dst[_k];\n    }\n\n    return res;\n  }\n  /**\n   * deepMerge\n   * Recursively merge the objects from arguments, returning a new object.\n   *\n   * Usage: `Ul.deepMerge(obj1, obj2, obj3, obj4, ..., objN)`\n   *\n   * @name deepMerge\n   * @function\n   * @return {Object} The merged objects.\n   */\n  ,\n  deepMerge: function deepMerge() {\n    var dst = {},\n        src = null,\n        p = null,\n        args = [].splice.call(arguments, 0);\n\n    while (args.length > 0) {\n      src = args.splice(-1)[0];\n\n      if (!typpy(src, Object)) {\n        continue;\n      }\n\n      for (p in src) {\n        if (!src.hasOwnProperty(p)) {\n          continue;\n        }\n\n        if (typpy(src[p], Object)) {\n          dst[p] = this.deepMerge(src[p], dst[p] || {});\n        } else {\n          if (src[p] !== undefined) {\n            dst[p] = src[p];\n          }\n        }\n      }\n    }\n\n    return dst;\n  }\n  /**\n   * clone\n   * Deep clone of the provided item.\n   *\n   * @name clone\n   * @function\n   * @param {Anything} item The item that should be cloned\n   * @return {Anything} The cloned object\n   */\n  ,\n  clone: function clone(item) {\n    if (!item) {\n      return item;\n    }\n\n    var types = [Number, String, Boolean],\n        result = undefined;\n\n    for (var _i = 0; _i < types.length; ++_i) {\n      var type = types[_i];\n\n      if (item instanceof type) {\n        result = type(item);\n      }\n    }\n\n    if (typeof result == \"undefined\") {\n      if (Array.isArray(item)) {\n        result = [];\n\n        for (var i = 0; i < item.length; ++i) {\n          result[i] = this.clone(item[i]);\n        }\n      } else if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) == \"object\") {\n        if (!item.prototype) {\n          if (item instanceof Date) {\n            result = new Date(item);\n          } else {\n            result = {};\n\n            for (i in item) {\n              result[i] = this.clone(item[i]);\n            }\n          }\n        } else {\n          result = item;\n        }\n      } else {\n        result = item;\n      }\n    }\n\n    return result;\n  },\n  HOME_DIR: process.env[process.platform == \"win32\" ? \"USERPROFILE\" : \"HOME\"]\n  /**\n   * home\n   * Get the home directory path on any platform. The value can be\n   * accessed using `Ul.HOME_DIR` too.\n   *\n   * @name home\n   * @function\n   * @return {String} The home directory path.\n   */\n  ,\n  home: function home() {\n    return this.HOME_DIR;\n  }\n};","map":{"version":3,"sources":["/home/mormad/Documents/sandogh/client/node_modules/ul/lib/index.js"],"names":["_typeof","Symbol","iterator","obj","constructor","prototype","typpy","require","Deffy","Ul","module","exports","merge","dst","src","p","res","k","_k","undefined","deepMerge","args","splice","call","arguments","length","Object","hasOwnProperty","clone","item","types","Number","String","Boolean","result","_i","type","Array","isArray","i","Date","HOME_DIR","process","env","platform","home"],"mappings":"AAAA;;AAEA,IAAIA,OAAO,GAAG,OAAOC,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,QAAd,KAA2B,QAA3D,GAAsE,UAAUC,GAAV,EAAe;AAAE,SAAO,OAAOA,GAAd;AAAoB,CAA3G,GAA8G,UAAUA,GAAV,EAAe;AAAE,SAAOA,GAAG,IAAI,OAAOF,MAAP,KAAkB,UAAzB,IAAuCE,GAAG,CAACC,WAAJ,KAAoBH,MAA3D,IAAqEE,GAAG,KAAKF,MAAM,CAACI,SAApF,GAAgG,QAAhG,GAA2G,OAAOF,GAAzH;AAA+H,CAA5Q;;AAEA,IAAIG,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;AAAA,IACIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CADnB;;AAGA,IAAIE,EAAE,GAAGC,MAAM,CAACC,OAAP,GAAiB;AACtB;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACIC,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,GAAf,EAAoBC,GAApB,EAAyBC,CAAzB,EAA4B;AAC/B,QAAIC,GAAG,GAAG,EAAV;AAEAF,IAAAA,GAAG,GAAGN,KAAK,CAACM,GAAD,EAAM,EAAN,CAAX;AACAD,IAAAA,GAAG,GAAGL,KAAK,CAACK,GAAD,EAAM,EAAN,CAAX;;AAEA,SAAK,IAAII,CAAT,IAAcH,GAAd,EAAmB;AACfE,MAAAA,GAAG,CAACC,CAAD,CAAH,GAASH,GAAG,CAACG,CAAD,CAAZ;AACH;;AACD,SAAK,IAAIC,EAAT,IAAeL,GAAf,EAAoB;AAChB,UAAIM,SAAS,KAAKN,GAAG,CAACK,EAAD,CAArB,EAA2B;AACvB;AACH;;AACDF,MAAAA,GAAG,CAACE,EAAD,CAAH,GAAUL,GAAG,CAACK,EAAD,CAAb;AACH;;AAED,WAAOF,GAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvC0B;AAyCtBI,EAAAA,SAAS,EAAE,SAASA,SAAT,GAAqB;AAE5B,QAAIP,GAAG,GAAG,EAAV;AAAA,QACIC,GAAG,GAAG,IADV;AAAA,QAEIC,CAAC,GAAG,IAFR;AAAA,QAGIM,IAAI,GAAG,GAAGC,MAAH,CAAUC,IAAV,CAAeC,SAAf,EAA0B,CAA1B,CAHX;;AAKA,WAAOH,IAAI,CAACI,MAAL,GAAc,CAArB,EAAwB;AACpBX,MAAAA,GAAG,GAAGO,IAAI,CAACC,MAAL,CAAY,CAAC,CAAb,EAAgB,CAAhB,CAAN;;AACA,UAAI,CAAChB,KAAK,CAACQ,GAAD,EAAMY,MAAN,CAAV,EAAyB;AACrB;AACH;;AACD,WAAKX,CAAL,IAAUD,GAAV,EAAe;AACX,YAAI,CAACA,GAAG,CAACa,cAAJ,CAAmBZ,CAAnB,CAAL,EAA4B;AACxB;AACH;;AACD,YAAIT,KAAK,CAACQ,GAAG,CAACC,CAAD,CAAJ,EAASW,MAAT,CAAT,EAA2B;AACvBb,UAAAA,GAAG,CAACE,CAAD,CAAH,GAAS,KAAKK,SAAL,CAAeN,GAAG,CAACC,CAAD,CAAlB,EAAuBF,GAAG,CAACE,CAAD,CAAH,IAAU,EAAjC,CAAT;AACH,SAFD,MAEO;AACH,cAAID,GAAG,CAACC,CAAD,CAAH,KAAWI,SAAf,EAA0B;AACtBN,YAAAA,GAAG,CAACE,CAAD,CAAH,GAASD,GAAG,CAACC,CAAD,CAAZ;AACH;AACJ;AACJ;AACJ;;AAED,WAAOF,GAAP;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9E0B;AAgFtBe,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,IAAf,EAAqB;AAExB,QAAI,CAACA,IAAL,EAAW;AACP,aAAOA,IAAP;AACH;;AAED,QAAIC,KAAK,GAAG,CAACC,MAAD,EAASC,MAAT,EAAiBC,OAAjB,CAAZ;AAAA,QACIC,MAAM,GAAGf,SADb;;AAGA,SAAK,IAAIgB,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGL,KAAK,CAACL,MAA5B,EAAoC,EAAEU,EAAtC,EAA0C;AACtC,UAAIC,IAAI,GAAGN,KAAK,CAACK,EAAD,CAAhB;;AACA,UAAIN,IAAI,YAAYO,IAApB,EAA0B;AACtBF,QAAAA,MAAM,GAAGE,IAAI,CAACP,IAAD,CAAb;AACH;AACJ;;AAED,QAAI,OAAOK,MAAP,IAAiB,WAArB,EAAkC;AAC9B,UAAIG,KAAK,CAACC,OAAN,CAAcT,IAAd,CAAJ,EAAyB;AACrBK,QAAAA,MAAM,GAAG,EAAT;;AACA,aAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,IAAI,CAACJ,MAAzB,EAAiC,EAAEc,CAAnC,EAAsC;AAClCL,UAAAA,MAAM,CAACK,CAAD,CAAN,GAAY,KAAKX,KAAL,CAAWC,IAAI,CAACU,CAAD,CAAf,CAAZ;AACH;AACJ,OALD,MAKO,IAAI,CAAC,OAAOV,IAAP,KAAgB,WAAhB,GAA8B,WAA9B,GAA4C7B,OAAO,CAAC6B,IAAD,CAApD,KAA+D,QAAnE,EAA6E;AAChF,YAAI,CAACA,IAAI,CAACxB,SAAV,EAAqB;AACjB,cAAIwB,IAAI,YAAYW,IAApB,EAA0B;AACtBN,YAAAA,MAAM,GAAG,IAAIM,IAAJ,CAASX,IAAT,CAAT;AACH,WAFD,MAEO;AACHK,YAAAA,MAAM,GAAG,EAAT;;AACA,iBAAKK,CAAL,IAAUV,IAAV,EAAgB;AACZK,cAAAA,MAAM,CAACK,CAAD,CAAN,GAAY,KAAKX,KAAL,CAAWC,IAAI,CAACU,CAAD,CAAf,CAAZ;AACH;AACJ;AACJ,SATD,MASO;AACHL,UAAAA,MAAM,GAAGL,IAAT;AACH;AACJ,OAbM,MAaA;AACHK,QAAAA,MAAM,GAAGL,IAAT;AACH;AACJ;;AAED,WAAOK,MAAP;AACH,GAzHqB;AA0HtBO,EAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYD,OAAO,CAACE,QAAR,IAAoB,OAApB,GAA8B,aAA9B,GAA8C,MAA1D;AAEV;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApI0B;AAqIpBC,EAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,WAAO,KAAKJ,QAAZ;AACH;AAvIqB,CAA1B","sourcesContent":["\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar typpy = require(\"typpy\"),\n    Deffy = require(\"deffy\");\n\nvar Ul = module.exports = {\n    /**\n     * merge\n     * One level merge. Faster than `deepMerge`.\n     *\n     * @name merge\n     * @function\n     * @param dst {Object} The destination object.\n     * @param src {Object} The source object (usually defaults).\n     * @return {Object} The result object.\n     */\n    merge: function merge(dst, src, p) {\n        var res = {};\n\n        src = Deffy(src, {});\n        dst = Deffy(dst, {});\n\n        for (var k in src) {\n            res[k] = src[k];\n        }\n        for (var _k in dst) {\n            if (undefined === dst[_k]) {\n                continue;\n            }\n            res[_k] = dst[_k];\n        }\n\n        return res;\n    }\n\n    /**\n     * deepMerge\n     * Recursively merge the objects from arguments, returning a new object.\n     *\n     * Usage: `Ul.deepMerge(obj1, obj2, obj3, obj4, ..., objN)`\n     *\n     * @name deepMerge\n     * @function\n     * @return {Object} The merged objects.\n     */\n    ,\n    deepMerge: function deepMerge() {\n\n        var dst = {},\n            src = null,\n            p = null,\n            args = [].splice.call(arguments, 0);\n\n        while (args.length > 0) {\n            src = args.splice(-1)[0];\n            if (!typpy(src, Object)) {\n                continue;\n            }\n            for (p in src) {\n                if (!src.hasOwnProperty(p)) {\n                    continue;\n                }\n                if (typpy(src[p], Object)) {\n                    dst[p] = this.deepMerge(src[p], dst[p] || {});\n                } else {\n                    if (src[p] !== undefined) {\n                        dst[p] = src[p];\n                    }\n                }\n            }\n        }\n\n        return dst;\n    }\n\n    /**\n     * clone\n     * Deep clone of the provided item.\n     *\n     * @name clone\n     * @function\n     * @param {Anything} item The item that should be cloned\n     * @return {Anything} The cloned object\n     */\n    ,\n    clone: function clone(item) {\n\n        if (!item) {\n            return item;\n        }\n\n        var types = [Number, String, Boolean],\n            result = undefined;\n\n        for (var _i = 0; _i < types.length; ++_i) {\n            var type = types[_i];\n            if (item instanceof type) {\n                result = type(item);\n            }\n        }\n\n        if (typeof result == \"undefined\") {\n            if (Array.isArray(item)) {\n                result = [];\n                for (var i = 0; i < item.length; ++i) {\n                    result[i] = this.clone(item[i]);\n                }\n            } else if ((typeof item === \"undefined\" ? \"undefined\" : _typeof(item)) == \"object\") {\n                if (!item.prototype) {\n                    if (item instanceof Date) {\n                        result = new Date(item);\n                    } else {\n                        result = {};\n                        for (i in item) {\n                            result[i] = this.clone(item[i]);\n                        }\n                    }\n                } else {\n                    result = item;\n                }\n            } else {\n                result = item;\n            }\n        }\n\n        return result;\n    },\n    HOME_DIR: process.env[process.platform == \"win32\" ? \"USERPROFILE\" : \"HOME\"]\n\n    /**\n     * home\n     * Get the home directory path on any platform. The value can be\n     * accessed using `Ul.HOME_DIR` too.\n     *\n     * @name home\n     * @function\n     * @return {String} The home directory path.\n     */\n    , home: function home() {\n        return this.HOME_DIR;\n    }\n};"]},"metadata":{},"sourceType":"script"}