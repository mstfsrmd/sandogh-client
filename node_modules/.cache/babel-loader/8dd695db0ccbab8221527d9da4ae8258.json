{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mormad/Documents/sandogh/client/src/components/login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link, Director } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport host from '../constants/host';\nconst socket = io.connect(host, {\n  transports: ['websocket']\n});\n\nconst Login = ({\n  isVerified,\n  isManager,\n  logedInUserF,\n  setErrorF\n}) => {\n  _s();\n\n  document.title = 'ورود به حساب کاربری';\n  const [userValue, setUserValue] = useState('');\n  const [passValue, setPassValue] = useState('');\n  const [verified, setVerified] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    socket.on('verifyRes', function (e) {\n      if (e.username) {\n        if (e.cert) {\n          setVerified(true);\n          isManager(true);\n          setError('');\n          logedInUserF(e.username);\n        } else {\n          setVerified(true);\n          setError('');\n          isVerified(true);\n          logedInUserF(e.username);\n        }\n      } else {\n        setError('نام کارربری یا رمزعبور نادرست است');\n        isVerified(false);\n      }\n    });\n  }, [verified]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"login\",\n    dir: \"rtl\",\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (!socket.connected) {\n        setErrorF(true);\n      } else {\n        socket.emit('verify', {\n          userValue,\n          passValue\n        });\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"login-input\",\n      type: \"text\",\n      value: userValue,\n      onChange: e => {\n        setUserValue(e.target.value);\n      },\n      placeholder: \"\\u0646\\u0627\\u0645 \\u06A9\\u0627\\u0631\\u0628\\u0631\\u06CC \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u0646\\u0645\\u0627\\u06CC\\u06CC\\u062F\",\n      required: true,\n      autoComplete: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"login-input\",\n      type: \"password\",\n      value: passValue,\n      onChange: e => {\n        setPassValue(e.target.value);\n      },\n      placeholder: \"\\u0631\\u0645\\u0632 \\u0639\\u0628\\u0648\\u0631 \\u062E\\u0648\\u062F \\u0631\\u0627 \\u0648\\u0627\\u0631\\u062F \\u0646\\u0645\\u0627\\u06CC\\u06CC\\u062F\",\n      required: true,\n      autoComplete: \"true\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-cont\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        className: \"create-account\",\n        to: '/register',\n        children: \"\\u0627\\u06CC\\u062C\\u0627\\u062F \\u062D\\u0633\\u0627\\u0628\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        children: \"\\u0648\\u0631\\u0648\\u062F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"v/eWqIylGWufxYeTL9tn1QC263s=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/mormad/Documents/sandogh/client/src/components/login.js"],"names":["React","useState","useEffect","Link","Director","io","host","socket","connect","transports","Login","isVerified","isManager","logedInUserF","setErrorF","document","title","userValue","setUserValue","passValue","setPassValue","verified","setVerified","error","setError","on","e","username","cert","preventDefault","connected","emit","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n  Link,\n  Director\n} from 'react-router-dom';\nimport io from 'socket.io-client';\nimport host from '../constants/host'\nconst socket = io.connect(host,{transports: ['websocket']});\n\nconst Login = ({isVerified, isManager, logedInUserF, setErrorF}) => {\n  document.title = 'ورود به حساب کاربری';\n  const[userValue, setUserValue] = useState('');\n  const[passValue, setPassValue] = useState('');\n  const[verified, setVerified] = useState(false);\n  const[error, setError] = useState('');\n\n\n  useEffect(() => {\n    socket.on('verifyRes', function (e) {\n      if (e.username) {\n        if (e.cert) {\n          setVerified(true)\n          isManager(true)\n          setError('')\n          logedInUserF(e.username)\n        }else {\n          setVerified(true)\n          setError('')\n          isVerified(true)\n          logedInUserF(e.username)\n        }\n      }else {\n        setError('نام کارربری یا رمزعبور نادرست است')\n        isVerified(false)\n      }\n    })\n  },[verified])\n\n  return (\n    <form className=\"login\" dir=\"rtl\" onSubmit={\n      (e)=>{\n        e.preventDefault();\n        if (!socket.connected) {\n          setErrorF(true)\n        }else {\n          socket.emit('verify', {userValue, passValue})\n        }\n      }\n    }>\n      <input className=\"login-input\"\n      type=\"text\"\n      value={userValue}\n      onChange={((e)=>{setUserValue(e.target.value)})}\n      placeholder=\"نام کاربری خود را وارد نمایید\"\n      required\n      autoComplete=\"true\"\n       />\n      <input className=\"login-input\"\n      type=\"password\"\n      value={passValue}\n      onChange={((e)=>{setPassValue(e.target.value)})}\n      placeholder=\"رمز عبور خود را وارد نمایید\"\n      required\n      autoComplete=\"true\"\n      />\n      <div className=\"form-error\">{error}</div>\n      <div className=\"button-cont\">\n        <Link className=\"create-account\" to={'/register'}>\n          ایجاد حساب\n        </Link>\n        <button className=\"login-button\">ورود</button>\n      </div>\n    </form>\n  );\n}\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}