{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mormad/Documents/sandogh/client/src/components/graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Router, Route, Link } from 'react-router-dom';\nimport { PathLine } from 'react-svg-pathline';\nimport UnderStr from './underStrc';\nimport Section from './manager-sec';\nimport io from 'socket.io-client';\nimport host from '../constants/host';\nconst socket = io.connect(host, {\n  transports: ['websocket']\n});\nconst graph = [{\n  x: 0,\n  y: 100\n}, {\n  x: 10,\n  y: 100\n}, {\n  x: 20,\n  y: 100\n}, {\n  x: 30,\n  y: 100\n}, {\n  x: 40,\n  y: 100\n}, {\n  x: 50,\n  y: 100\n}, {\n  x: 60,\n  y: 100\n}, {\n  x: 70,\n  y: 100\n}, {\n  x: 80,\n  y: 100\n}, {\n  x: 90,\n  y: 100\n}, {\n  x: 100,\n  y: 100\n}, {\n  x: 110,\n  y: 100\n}, {\n  x: 120,\n  y: 100\n}, {\n  x: 130,\n  y: 100\n}, {\n  x: 140,\n  y: 100\n}, {\n  x: 150,\n  y: 100\n}, {\n  x: 160,\n  y: 100\n}, {\n  x: 170,\n  y: 100\n}, {\n  x: 180,\n  y: 100\n}, {\n  x: 190,\n  y: 100\n}, {\n  x: 200,\n  y: 100\n}, {\n  x: 210,\n  y: 100\n}, {\n  x: 220,\n  y: 100\n}, {\n  x: 230,\n  y: 100\n}, {\n  x: 240,\n  y: 100\n}, {\n  x: 250,\n  y: 100\n}, {\n  x: 260,\n  y: 100\n}, {\n  x: 270,\n  y: 100\n}, {\n  x: 280,\n  y: 100\n}, {\n  x: 290,\n  y: 100\n}, {\n  x: 300,\n  y: 100\n}];\nlet day = [];\nlet d = new Date();\nlet thisDay = d.getDay();\ngraph.forEach((item, i) => {\n  //console.log(item['x']);\n  thisDay--;\n\n  if (thisDay < 1) {\n    thisDay = thisDay + 30;\n  }\n\n  day.push({\n    x: thisDay,\n    y: 100\n  });\n});\n\nconst Graph = ({\n  activity\n}) => {\n  _s();\n\n  const [data, setData] = useState();\n  const [g, setG] = useState(graph);\n  let c = 0;\n  let h = {};\n  let pLine = [];\n  console.log('DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD');\n  useEffect(() => {\n    const sd = activity.map((item, i) => {\n      let d = item.split(' ')[0].split('/')[2];\n      let f = activity[i + 1];\n      h[d] = c + 1;\n\n      if (f) {\n        //console.log(item, activity[i+1]);\n        if (d != f.split(' ')[0].split('/')[2]) {\n          c = 0;\n        } else {\n          c++;\n        }\n      } //console.log(h);\n\n\n      return h;\n    }); //console.log(sd[0])\n\n    setData(sd[0]);\n  }, [1]);\n  setTimeout(function () {//console.log(data);\n  }, 3000);\n  useEffect(() => {\n    console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH'); //console.log(data);\n\n    day.forEach((item, i) => {\n      if (data) {\n        //console.log(data);\n        //console.log(Object.values(data));\n        for (var j = 0; j < Object.keys(data).length; j++) {\n          //console.log(Object.values(data)[j]);\n          if (item.x == Object.keys(data)[j]) {\n            if (!pLine[i]) {\n              pLine.push({\n                x: item.x * 10,\n                y: 10 * (100 - Object.values(data)[j])\n              });\n            }\n          } else {\n            if (!pLine[i]) {\n              pLine.push({\n                x: item.x * 10,\n                y: item.y * 10\n              });\n            }\n          }\n        }\n      }\n    });\n    setG(pLine);\n  }, [data]);\n  /*useEffect(() => {\n    console.log('changed');\n  },[data])\n    /*activity.forEach((item, i) => {\n    let d = activity[i].split(' ')[0].split('/')[2];\n    let f = activity[i+1];\n    h[d] = c+1;\n    //console.log(h);\n    if (f) {\n      if (d != f.split(' ')[0].split('/')[2]) {\n        c = 0;\n      }else {\n        c++\n      }\n    }\n  });*/\n  //console.log(graph);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"activityDiag\",\n      width: 210,\n      height: 100,\n      children: /*#__PURE__*/_jsxDEV(PathLine, {\n        className: \"activityLine\",\n        points: g,\n        stroke: \"#00897B\",\n        strokeWidth: \".2\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        r: .3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Graph, \"UK1oTEKX+yp8FaYW0BVnOyf57Oc=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/mormad/Documents/sandogh/client/src/components/graph.js"],"names":["React","useState","useEffect","Router","Route","Link","PathLine","UnderStr","Section","io","host","socket","connect","transports","graph","x","y","day","d","Date","thisDay","getDay","forEach","item","i","push","Graph","activity","data","setData","g","setG","c","h","pLine","console","log","sd","map","split","f","setTimeout","j","Object","keys","length","values"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n  Router,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport {PathLine} from 'react-svg-pathline'\nimport UnderStr from './underStrc';\nimport Section from './manager-sec';\nimport io from 'socket.io-client';\nimport host from '../constants/host'\nconst socket = io.connect(host,{transports: ['websocket']});\n\nconst graph = [\n  {x:0, y:100},\n  {x:10, y:100},\n  {x:20, y:100},\n  {x:30, y:100},\n  {x:40, y:100},\n  {x:50, y:100},\n  {x:60, y:100},\n  {x:70, y:100},\n  {x:80, y:100},\n  {x:90, y:100},\n  {x:100, y:100},\n  {x:110, y:100},\n  {x:120, y:100},\n  {x:130, y:100},\n  {x:140, y:100},\n  {x:150, y:100},\n  {x:160, y:100},\n  {x:170, y:100},\n  {x:180, y:100},\n  {x:190, y:100},\n  {x:200, y:100},\n  {x:210, y:100},\n  {x:220, y:100},\n  {x:230, y:100},\n  {x:240, y:100},\n  {x:250, y:100},\n  {x:260, y:100},\n  {x:270, y:100},\n  {x:280, y:100},\n  {x:290, y:100},\n  {x:300, y:100},\n]\n\nlet day = [];\nlet d = new Date();\nlet thisDay = d.getDay();\ngraph.forEach((item, i) => {\n  //console.log(item['x']);\n  thisDay --;\n  if (thisDay<1) {\n    thisDay = thisDay + 30;\n  }\n  day.push({x:thisDay, y:100})\n});\n\n\n\n\nconst Graph = ({activity}) => {\n  const [data, setData] = useState()\n  const [g, setG] = useState(graph)\n  let c = 0;\n  let h = {};\n  let pLine = [];\n\n        console.log('DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDD');\n\n  useEffect(() => {\n    const sd = activity.map((item, i) =>{\n                let d = item.split(' ')[0].split('/')[2];\n                let f = activity[i+1];\n                h[d] = c+1;\n                if (f) {\n                  //console.log(item, activity[i+1]);\n                  if (d != f.split(' ')[0].split('/')[2]) {\n                    c = 0;\n                  }else {\n                    c++\n                  }\n                }\n                //console.log(h);\n                return h\n\n              });\n              //console.log(sd[0])\n    setData(sd[0]);\n  }, [1])\n\n\n  setTimeout(function () {\n    //console.log(data);\n  }, 3000);\n\n  useEffect(() => {\n    console.log('HHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHH');\n    //console.log(data);\n    day.forEach((item, i) => {\n      if (data) {\n        //console.log(data);\n        //console.log(Object.values(data));\n        for (var j = 0; j < Object.keys(data).length; j++) {\n          //console.log(Object.values(data)[j]);\n          if (item.x == Object.keys(data)[j]) {\n            if (!pLine[i]) {\n              pLine.push({x:item.x*10, y:10*(100-Object.values(data)[j])})\n            }\n          }else {\n            if (!pLine[i]) {\n              pLine.push({x:item.x*10, y:item.y*10})\n            }\n          }\n        }\n      }\n    });\n    setG(pLine);\n  }, [data])\n\n  /*useEffect(() => {\n    console.log('changed');\n  },[data])\n\n\n  /*activity.forEach((item, i) => {\n    let d = activity[i].split(' ')[0].split('/')[2];\n    let f = activity[i+1];\n    h[d] = c+1;\n    //console.log(h);\n    if (f) {\n      if (d != f.split(' ')[0].split('/')[2]) {\n        c = 0;\n      }else {\n        c++\n      }\n    }\n  });*/\n\n\n  //console.log(graph);\n\n  return (\n    <>\n      <svg className=\"activityDiag\" width={210} height={100}>\n        <PathLine\n         className=\"activityLine\"\n         points={g}\n         stroke=\"#00897B\"\n         strokeWidth=\".2\"\n         fill=\"none\"\n         strokeLinecap=\"round\"\n         r={.3}\n         />\n      </svg>\n      <h1></h1>\n      </>\n  );\n}\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}