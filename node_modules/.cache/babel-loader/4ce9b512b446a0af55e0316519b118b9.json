{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mormad/Documents/sandogh/client/src/components/random.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nlet c = [];\nlet color = 'white';\nlet rand = Math.round(Math.random() * 30);\n\nfor (var i = 1; i <= 100; i++) {\n  c.push(i);\n}\n\nconst Random = () => {\n  _s();\n\n  const cell = c.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n    id: i,\n    style: {\n      backgroundColor: color\n    },\n    className: \"randomCell\",\n    children: i\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 36\n  }, this));\n  useEffect(() => {\n    let x = 0;\n\n    while (x > 30) {\n      x++;\n      document.getElementById('' + rand + '').style.backgroundColor = '#87255B';\n      let arrow = ['up', 'right', 'down', 'left'];\n      let randArrow = Math.round(Math.random() * 3);\n\n      if (randArrow == 'left') {\n        if ((rand + 1) % 10 == 0) {\n          rand--;\n        } else {\n          rand++;\n        }\n      }\n\n      if (randArrow == 'right') {\n        if (rand % 10 == 0) {\n          rand++;\n        } else {\n          rand--;\n        }\n      }\n\n      if (randArrow == 'up') {\n        rand = ran + 10;\n      }\n\n      if (randArrow == 'down') {\n        rand = rand - 10;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"random\",\n    children: cell\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Random, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Random;\nexport default Random;\n\nvar _c;\n\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"sources":["/home/mormad/Documents/sandogh/client/src/components/random.js"],"names":["React","useState","useEffect","c","color","rand","Math","round","random","i","push","Random","cell","map","item","backgroundColor","x","document","getElementById","style","arrow","randArrow","ran"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,IAAIC,CAAC,GAAG,EAAR;AACA,IAAIC,KAAK,GAAG,OAAZ;AACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAX;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7BN,EAAAA,CAAC,CAACO,IAAF,CAAOD,CAAP;AACD;;AAED,MAAME,MAAM,GAAG,MAAM;AAAA;;AAEnB,QAAMC,IAAI,GAAGT,CAAC,CAACU,GAAF,CAAM,CAACC,IAAD,EAAOL,CAAP,kBAAc;AAAW,IAAA,EAAE,EAAEA,CAAf;AAAkB,IAAA,KAAK,EAAE;AAACM,MAAAA,eAAe,EAAEX;AAAlB,KAAzB;AAAmD,IAAA,SAAS,EAAC,YAA7D;AAAA,cAA2EK;AAA3E,KAAQA,CAAR;AAAA;AAAA;AAAA;AAAA,UAApB,CAAb;AAEAP,EAAAA,SAAS,CAAC,MAAI;AACZ,QAAIc,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAG,EAAX,EAAe;AACbA,MAAAA,CAAC;AACDC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAGb,IAAH,GAAQ,EAAhC,EAAoCc,KAApC,CAA0CJ,eAA1C,GAA4D,SAA5D;AACA,UAAIK,KAAK,GAAG,CAAC,IAAD,EAAO,OAAP,EAAgB,MAAhB,EAAwB,MAAxB,CAAZ;AACA,UAAIC,SAAS,GAAIf,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,CAAjB;;AACA,UAAIa,SAAS,IAAI,MAAjB,EAAyB;AACvB,YAAI,CAAChB,IAAI,GAAC,CAAN,IAAS,EAAT,IAAe,CAAnB,EAAsB;AACpBA,UAAAA,IAAI;AACL,SAFD,MAEM;AACJA,UAAAA,IAAI;AACL;AACF;;AAAA,UAAIgB,SAAS,IAAI,OAAjB,EAA0B;AACzB,YAAIhB,IAAI,GAAC,EAAL,IAAW,CAAf,EAAkB;AAChBA,UAAAA,IAAI;AACL,SAFD,MAEM;AACJA,UAAAA,IAAI;AACL;AACF;;AACD,UAAIgB,SAAS,IAAI,IAAjB,EAAuB;AACrBhB,QAAAA,IAAI,GAAGiB,GAAG,GAAG,EAAb;AACD;;AACD,UAAID,SAAS,IAAI,MAAjB,EAAyB;AACvBhB,QAAAA,IAAI,GAAGA,IAAI,GAAG,EAAd;AACD;AACF;AACF,GA3BQ,CAAT;AA6BA,sBACE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA,cAAuBO;AAAvB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CApCD;;GAAMD,M;;KAAAA,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nlet c = [];\nlet color = 'white';\nlet rand = Math.round(Math.random()*30);\nfor (var i = 1; i <= 100; i++) {\n  c.push(i)\n}\n\nconst Random = () => {\n\n  const cell = c.map((item, i) => (<p key={i} id={i} style={{backgroundColor: color}} className=\"randomCell\">{i}</p>))\n\n  useEffect(()=>{\n    let x = 0;\n    while (x > 30) {\n      x++\n      document.getElementById(''+rand+'').style.backgroundColor = '#87255B';\n      let arrow = ['up', 'right', 'down', 'left']\n      let randArrow =  Math.round(Math.random()*3);\n      if (randArrow == 'left') {\n        if ((rand+1)%10 == 0) {\n          rand--;\n        }else {\n          rand++;\n        }\n      }if (randArrow == 'right') {\n        if (rand%10 == 0) {\n          rand++;\n        }else {\n          rand--;\n        }\n      }\n      if (randArrow == 'up') {\n        rand = ran + 10;\n      }\n      if (randArrow == 'down') {\n        rand = rand - 10;\n      }\n    }\n  })\n\n  return (\n    <p className=\"random\">{cell}</p>\n  );\n}\nexport default Random;\n"]},"metadata":{},"sourceType":"module"}