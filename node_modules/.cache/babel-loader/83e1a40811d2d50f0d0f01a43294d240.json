{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mormad/Documents/sandogh/client/src/components/alert.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport host from '../constants/host';\nconst socket = io.connect(host, {\n  transports: ['websocket']\n});\n\nconst Alert = ({\n  username,\n  manager\n}) => {\n  _s();\n\n  const [forPublic, setForPublic] = useState([]);\n  const [forManager, setForManager] = useState([]);\n  const [forPrivate, setForPrivate] = useState([]);\n  useEffect(() => {\n    socket.emit('giveMeAlert', {\n      username,\n      manager\n    });\n  });\n  useEffect(() => {\n    socket.on('alert', function (n) {\n      setForPublic(n['all'].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"salam\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 44\n      }, this)));\n      setForManager(n['manager'].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"item\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 49\n      }, this)));\n      setForPrivate(n[username].map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"my\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 48\n      }, this)));\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    dir: \"rtl\",\n    children: [forPublic, forManager, forPrivate]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Alert, \"D7VFgjiiJFBZN9pLic72ekuFvm4=\");\n\n_c = Alert;\nexport default Alert;\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"sources":["/home/mormad/Documents/sandogh/client/src/components/alert.js"],"names":["React","useState","useEffect","Link","io","host","socket","connect","transports","Alert","username","manager","forPublic","setForPublic","forManager","setForManager","forPrivate","setForPrivate","emit","on","n","map","item"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SACEC,IADF,QAEO,kBAFP;AAGA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,MAAMC,MAAM,GAAGF,EAAE,CAACG,OAAH,CAAWF,IAAX,EAAgB;AAACG,EAAAA,UAAU,EAAE,CAAC,WAAD;AAAb,CAAhB,CAAf;;AAGA,MAAMC,KAAK,GAAG,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA;AAAX,CAAD,KAAyB;AAAA;;AACrC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,UAAD,EAAaC,aAAb,IAA8Bd,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACY,IAAP,CAAY,aAAZ,EAA2B;AAACR,MAAAA,QAAD;AAAWC,MAAAA;AAAX,KAA3B;AACD,GAFQ,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,MAAM,CAACa,EAAP,CAAU,OAAV,EAAmB,UAAUC,CAAV,EAAa;AAC9BP,MAAAA,YAAY,CAACO,CAAC,CAAC,KAAD,CAAD,CAASC,GAAT,CAAcC,IAAD,iBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxB,CAAD,CAAZ;AACAP,MAAAA,aAAa,CAACK,CAAC,CAAC,SAAD,CAAD,CAAaC,GAAb,CAAkBC,IAAD,iBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA5B,CAAD,CAAb;AACAL,MAAAA,aAAa,CAACG,CAAC,CAACV,QAAD,CAAD,CAAYW,GAAZ,CAAiBC,IAAD,iBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA3B,CAAD,CAAb;AACD,KAJD;AAKD,GANQ,CAAT;AAQA,sBACE;AAAK,IAAA,GAAG,EAAC,KAAT;AAAA,eACGV,SADH,EAEGE,UAFH,EAGGE,UAHH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAxBD;;GAAMP,K;;KAAAA,K;AA0BN,eAAeA,KAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n  Link,\n} from 'react-router-dom';\nimport io from 'socket.io-client';\nimport host from '../constants/host'\nconst socket = io.connect(host,{transports: ['websocket']});\n\n\nconst Alert = ({username, manager}) => {\n  const [forPublic, setForPublic] = useState([])\n  const [forManager, setForManager] = useState([])\n  const [forPrivate, setForPrivate] = useState([])\n\n  useEffect(() => {\n    socket.emit('giveMeAlert', {username, manager})\n  })\n\n  useEffect(() => {\n    socket.on('alert', function (n) {\n      setForPublic(n['all'].map((item) => (<div>salam</div>)))\n      setForManager(n['manager'].map((item) => (<div>item</div>)))\n      setForPrivate(n[username].map((item) => (<div>my</div>)))\n    })\n  })\n\n  return (\n    <div dir=\"rtl\">\n      {forPublic}\n      {forManager}\n      {forPrivate}\n    </div>\n  );\n}\n\nexport default Alert;\n"]},"metadata":{},"sourceType":"module"}