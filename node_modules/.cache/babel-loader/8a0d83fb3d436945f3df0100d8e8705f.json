{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/mormad/Documents/sandogh/client/src/components/random.js\";\nimport React, { useState, useEffect } from 'react';\nlet c = [];\nlet color = 'white';\nlet rand = Math.round(Math.random() * 30);\n\nfor (var i = 1; i <= 100; i++) {\n  c.push(i);\n}\n\nconst Random = () => {\n  const cell = c.map((item, i) => /*#__PURE__*/_jsxDEV(\"p\", {\n    id: i,\n    style: {\n      backgroundColor: color\n    },\n    className: \"randomCell\",\n    children: i\n  }, i, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 36\n  }, this));\n  let x = 0;\n\n  do {\n    x++;\n    console.log(rand);\n    document.getElementById('' + rand + '').style.backgroundColor = '#87255B';\n    let arrow = ['up', 'right', 'down', 'left'];\n    let randArrow = arrow[Math.round(Math.random() * 3)];\n    console.log(randArrow);\n\n    if (randArrow == 'left') {\n      if ((rand + 1) % 10 == 0) {\n        rand--;\n      } else {\n        rand++;\n      }\n    }\n\n    if (randArrow == 'right') {\n      if (rand % 10 == 0) {\n        rand++;\n      } else {\n        rand--;\n      }\n    }\n\n    if (randArrow == 'up') {\n      rand = rand + 10;\n    }\n\n    if (randArrow == 'down') {\n      rand = rand - 10;\n    }\n  } while (x > 30);\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"random\",\n    children: cell\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Random;\nexport default Random;\n\nvar _c;\n\n$RefreshReg$(_c, \"Random\");","map":{"version":3,"sources":["/home/mormad/Documents/sandogh/client/src/components/random.js"],"names":["React","useState","useEffect","c","color","rand","Math","round","random","i","push","Random","cell","map","item","backgroundColor","x","console","log","document","getElementById","style","arrow","randArrow"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AAEA,IAAIC,CAAC,GAAG,EAAR;AACA,IAAIC,KAAK,GAAG,OAAZ;AACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,EAAzB,CAAX;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,GAArB,EAA0BA,CAAC,EAA3B,EAA+B;AAC7BN,EAAAA,CAAC,CAACO,IAAF,CAAOD,CAAP;AACD;;AAED,MAAME,MAAM,GAAG,MAAM;AAEnB,QAAMC,IAAI,GAAGT,CAAC,CAACU,GAAF,CAAM,CAACC,IAAD,EAAOL,CAAP,kBAAc;AAAW,IAAA,EAAE,EAAEA,CAAf;AAAkB,IAAA,KAAK,EAAE;AAACM,MAAAA,eAAe,EAAEX;AAAlB,KAAzB;AAAmD,IAAA,SAAS,EAAC,YAA7D;AAAA,cAA2EK;AAA3E,KAAQA,CAAR;AAAA;AAAA;AAAA;AAAA,UAApB,CAAb;AAEA,MAAIO,CAAC,GAAG,CAAR;;AACA,KAAG;AACDA,IAAAA,CAAC;AACDC,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAc,IAAAA,QAAQ,CAACC,cAAT,CAAwB,KAAGf,IAAH,GAAQ,EAAhC,EAAoCgB,KAApC,CAA0CN,eAA1C,GAA4D,SAA5D;AACA,QAAIO,KAAK,GAAG,CAAC,IAAD,EAAO,OAAP,EAAgB,MAAhB,EAAwB,MAAxB,CAAZ;AACA,QAAIC,SAAS,GAAID,KAAK,CAAChB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,CAAzB,CAAD,CAAtB;AACAS,IAAAA,OAAO,CAACC,GAAR,CAAYK,SAAZ;;AACA,QAAIA,SAAS,IAAI,MAAjB,EAAyB;AACvB,UAAI,CAAClB,IAAI,GAAC,CAAN,IAAS,EAAT,IAAe,CAAnB,EAAsB;AACpBA,QAAAA,IAAI;AACL,OAFD,MAEM;AACJA,QAAAA,IAAI;AACL;AACF;;AAAA,QAAIkB,SAAS,IAAI,OAAjB,EAA0B;AACzB,UAAIlB,IAAI,GAAC,EAAL,IAAW,CAAf,EAAkB;AAChBA,QAAAA,IAAI;AACL,OAFD,MAEM;AACJA,QAAAA,IAAI;AACL;AACF;;AACD,QAAIkB,SAAS,IAAI,IAAjB,EAAuB;AACrBlB,MAAAA,IAAI,GAAGA,IAAI,GAAG,EAAd;AACD;;AACD,QAAIkB,SAAS,IAAI,MAAjB,EAAyB;AACvBlB,MAAAA,IAAI,GAAGA,IAAI,GAAG,EAAd;AACD;AACF,GA1BD,QA0BSW,CAAC,GAAG,EA1Bb;;AA4BA,sBACE;AAAG,IAAA,SAAS,EAAC,QAAb;AAAA,cAAuBJ;AAAvB;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CApCD;;KAAMD,M;AAqCN,eAAeA,MAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\n\nlet c = [];\nlet color = 'white';\nlet rand = Math.round(Math.random()*30);\nfor (var i = 1; i <= 100; i++) {\n  c.push(i)\n}\n\nconst Random = () => {\n\n  const cell = c.map((item, i) => (<p key={i} id={i} style={{backgroundColor: color}} className=\"randomCell\">{i}</p>))\n\n  let x = 0;\n  do {\n    x++\n    console.log(rand);\n    document.getElementById(''+rand+'').style.backgroundColor = '#87255B';\n    let arrow = ['up', 'right', 'down', 'left']\n    let randArrow =  arrow[Math.round(Math.random()*3)];\n    console.log(randArrow);\n    if (randArrow == 'left') {\n      if ((rand+1)%10 == 0) {\n        rand--;\n      }else {\n        rand++;\n      }\n    }if (randArrow == 'right') {\n      if (rand%10 == 0) {\n        rand++;\n      }else {\n        rand--;\n      }\n    }\n    if (randArrow == 'up') {\n      rand = rand + 10;\n    }\n    if (randArrow == 'down') {\n      rand = rand - 10;\n    }\n  } while (x > 30);\n\n  return (\n    <p className=\"random\">{cell}</p>\n  );\n}\nexport default Random;\n"]},"metadata":{},"sourceType":"module"}