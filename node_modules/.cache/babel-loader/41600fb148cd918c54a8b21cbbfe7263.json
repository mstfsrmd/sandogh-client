{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mormad/Documents/sandogh/client/src/components/graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Router, Route, Link } from 'react-router-dom';\nimport { PathLine } from 'react-svg-pathline';\nimport UnderStr from './underStrc';\nimport Section from './manager-sec';\nimport io from 'socket.io-client';\nimport host from '../constants/host';\nconst socket = io.connect(host, {\n  transports: ['websocket']\n});\nconst graph = [{\n  x: 0,\n  y: 100\n}, {\n  x: 10,\n  y: 100\n}, {\n  x: 20,\n  y: 100\n}, {\n  x: 30,\n  y: 100\n}, {\n  x: 40,\n  y: 100\n}, {\n  x: 50,\n  y: 100\n}, {\n  x: 60,\n  y: 100\n}, {\n  x: 70,\n  y: 100\n}, {\n  x: 80,\n  y: 100\n}, {\n  x: 90,\n  y: 100\n}, {\n  x: 100,\n  y: 100\n}, {\n  x: 110,\n  y: 100\n}, {\n  x: 120,\n  y: 100\n}, {\n  x: 130,\n  y: 100\n}, {\n  x: 140,\n  y: 100\n}, {\n  x: 150,\n  y: 100\n}, {\n  x: 160,\n  y: 100\n}, {\n  x: 170,\n  y: 100\n}, {\n  x: 180,\n  y: 100\n}, {\n  x: 190,\n  y: 100\n}, {\n  x: 200,\n  y: 100\n}, {\n  x: 210,\n  y: 100\n}, {\n  x: 220,\n  y: 100\n}, {\n  x: 230,\n  y: 100\n}, {\n  x: 240,\n  y: 100\n}, {\n  x: 250,\n  y: 100\n}, {\n  x: 260,\n  y: 100\n}, {\n  x: 270,\n  y: 100\n}, {\n  x: 280,\n  y: 100\n}, {\n  x: 290,\n  y: 100\n}, {\n  x: 300,\n  y: 100\n}];\n\nconst Graph = ({\n  activity\n}) => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [g, setG] = useState(graph);\n  let c = 0;\n  let h = {};\n  useEffect(() => setData(activity.map((item, i) => {\n    console.log(item);\n    let d = item.split(' ')[0].split('/')[2];\n    let f = activity[i + 1];\n    h[d] = c + 1;\n\n    if (f) {\n      if (d != f.split(' ')[0].split('/')[2]) {\n        c = 0;\n      } else {\n        c++;\n      }\n    }\n\n    return h;\n  })), [1]);\n  useEffect(() => {\n    if (data != '') {\n      //console.log(data)\n      graph.forEach((item, i) => {\n        //console.log(data[0]);\n        if (Object.values(data[0])[i - 1]) {\n          graph[graph.length - i].y = 100 - Object.values(h)[Object.values(data[0]).length - i];\n          console.log(data[0]);\n        }\n      });\n    }\n  }, [1]);\n  /*activity.forEach((item, i) => {\n    let d = activity[i].split(' ')[0].split('/')[2];\n    let f = activity[i+1];\n    h[d] = c+1;\n    //console.log(h);\n    if (f) {\n      if (d != f.split(' ')[0].split('/')[2]) {\n        c = 0;\n      }else {\n        c++\n      }\n    }\n  });*/\n  //console.log(graph);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"activityDiag\",\n      width: 210,\n      height: 100,\n      children: /*#__PURE__*/_jsxDEV(PathLine, {\n        className: \"activityLine\",\n        points: graph,\n        stroke: \"#00897B\",\n        strokeWidth: \"3\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        r: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Graph, \"trDI6/ryBNwNLZKIpe+Z6JTYzfI=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/mormad/Documents/sandogh/client/src/components/graph.js"],"names":["React","useState","useEffect","Router","Route","Link","PathLine","UnderStr","Section","io","host","socket","connect","transports","graph","x","y","Graph","activity","data","setData","g","setG","c","h","map","item","i","console","log","d","split","f","forEach","Object","values","length"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n  Router,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport {PathLine} from 'react-svg-pathline'\nimport UnderStr from './underStrc';\nimport Section from './manager-sec';\nimport io from 'socket.io-client';\nimport host from '../constants/host'\nconst socket = io.connect(host,{transports: ['websocket']});\n\nconst graph = [\n  {x:0, y:100},\n  {x:10, y:100},\n  {x:20, y:100},\n  {x:30, y:100},\n  {x:40, y:100},\n  {x:50, y:100},\n  {x:60, y:100},\n  {x:70, y:100},\n  {x:80, y:100},\n  {x:90, y:100},\n  {x:100, y:100},\n  {x:110, y:100},\n  {x:120, y:100},\n  {x:130, y:100},\n  {x:140, y:100},\n  {x:150, y:100},\n  {x:160, y:100},\n  {x:170, y:100},\n  {x:180, y:100},\n  {x:190, y:100},\n  {x:200, y:100},\n  {x:210, y:100},\n  {x:220, y:100},\n  {x:230, y:100},\n  {x:240, y:100},\n  {x:250, y:100},\n  {x:260, y:100},\n  {x:270, y:100},\n  {x:280, y:100},\n  {x:290, y:100},\n  {x:300, y:100},\n]\n\n\nconst Graph = ({activity}) => {\n  const [data, setData] = useState([])\n  const [g, setG] = useState(graph)\n  let c = 0;\n  let h = {};\n\n\n  useEffect(() => (\n    setData(activity.map((item, i) =>{\n      console.log(item);\n      let d = item.split(' ')[0].split('/')[2];\n      let f = activity[i+1];\n      h[d] = c+1;\n      if (f) {\n        if (d != f.split(' ')[0].split('/')[2]) {\n          c = 0;\n        }else {\n          c++\n        }\n      }\n      return h;\n    }))\n  ),[1])\n\n  useEffect(() => {\n    if (data != '') {\n      //console.log(data)\n      graph.forEach((item, i) => {\n        //console.log(data[0]);\n        if (Object.values(data[0])[i-1]) {\n          graph[graph.length-i].y = 100-Object.values(h)[Object.values(data[0]).length-i]\n          console.log(data[0]);\n        }\n      })\n    }\n\n  },[1])\n\n\n  /*activity.forEach((item, i) => {\n    let d = activity[i].split(' ')[0].split('/')[2];\n    let f = activity[i+1];\n    h[d] = c+1;\n    //console.log(h);\n    if (f) {\n      if (d != f.split(' ')[0].split('/')[2]) {\n        c = 0;\n      }else {\n        c++\n      }\n    }\n  });*/\n\n\n  //console.log(graph);\n\n  return (\n    <>\n      <svg className=\"activityDiag\" width={210} height={100}>\n        <PathLine\n         className=\"activityLine\"\n         points={graph}\n         stroke=\"#00897B\"\n         strokeWidth=\"3\"\n         fill=\"none\"\n         strokeLinecap=\"round\"\n         r={5}\n         />\n      </svg>\n      <h1></h1>\n      </>\n  );\n}\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}