{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/mormad/Documents/sandogh/client/src/components/graph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Router, Route, Link } from 'react-router-dom';\nimport { PathLine } from 'react-svg-pathline';\nimport UnderStr from './underStrc';\nimport Section from './manager-sec';\nimport io from 'socket.io-client';\nimport host from '../constants/host';\nconst socket = io.connect(host, {\n  transports: ['websocket']\n});\nlet day = [];\nconst graph = [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,];\nlet d = new Date();\nlet thisDay = 1;\ngraph.forEach((item, i) => {\n  thisDay--;\n\n  if (thisDay < 1) {\n    thisDay = thisDay + 30;\n  }\n\n  day.push({\n    x: thisDay,\n    y: 100\n  });\n});\nconsole.log(day);\n\nconst Graph = ({\n  activity\n}) => {\n  _s();\n\n  const [data, setData] = useState();\n  const [g, setG] = useState(day);\n  let c = 0;\n  let h = {};\n  let pLine = [];\n  useEffect(() => {\n    const sd = activity.map((item, i) => {\n      let d = item.split(' ')[0].split('/')[2];\n      let f = activity[i + 1];\n      h[d] = c + 1;\n\n      if (f) {\n        //console.log(item, activity[i+1]);\n        if (d != f.split(' ')[0].split('/')[2]) {\n          c = 0;\n        } else {\n          c++;\n        }\n      }\n\n      return h;\n    });\n    setData(sd[0]);\n  }, [1]);\n  useEffect(() => {\n    day.forEach((item, i) => {\n      if (data) {\n        let xX = 10 * item.x,\n            yY = 10 * item.y;\n\n        for (var j = 0; j < Object.keys(data).length; j++) {\n          if (xX == 10 * Object.keys(data)[j]) {\n            if (!pLine[i]) {\n              pLine.push({\n                x: xX,\n                y: 10 * (100 - Object.values(data)[j])\n              });\n            }\n          } else {\n            if (!pLine[i]) {\n              pLine.push({\n                x: xX,\n                y: yY\n              });\n            }\n          }\n        }\n      }\n    });\n\n    if (pLine != '') {\n      setG(pLine);\n      console.log(pLine);\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"activityDiag\",\n      width: 210,\n      height: 100,\n      children: /*#__PURE__*/_jsxDEV(PathLine, {\n        className: \"activityLine\",\n        points: g,\n        stroke: \"#00897B\",\n        strokeWidth: \"3\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        r: 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Graph, \"+J/qVUURXPRuicX4frV8CvYtMF4=\");\n\n_c = Graph;\nexport default Graph;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"sources":["/home/mormad/Documents/sandogh/client/src/components/graph.js"],"names":["React","useState","useEffect","Router","Route","Link","PathLine","UnderStr","Section","io","host","socket","connect","transports","day","graph","d","Date","thisDay","forEach","item","i","push","x","y","console","log","Graph","activity","data","setData","g","setG","c","h","pLine","sd","map","split","f","xX","yY","j","Object","keys","length","values"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {\n  Router,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport {PathLine} from 'react-svg-pathline'\nimport UnderStr from './underStrc';\nimport Section from './manager-sec';\nimport io from 'socket.io-client';\nimport host from '../constants/host'\nconst socket = io.connect(host,{transports: ['websocket']});\n\nlet day = [];\nconst graph = [,,,,,,,,,,,,,,,,,,,,,,,,,,,,,]\nlet d = new Date();\nlet thisDay = 1;\ngraph.forEach((item, i) => {\n  thisDay --;\n  if (thisDay<1) {\n    thisDay = thisDay + 30;\n  }\n  day.push({x:thisDay, y:100})\n});\n\nconsole.log(day);\n\nconst Graph = ({activity}) => {\n  const [data, setData] = useState()\n  const [g, setG] = useState(day)\n  let c = 0;\n  let h = {};\n  let pLine = [];\n\n  useEffect(() => {\n    const sd = activity.map((item, i) =>{\n      let d = item.split(' ')[0].split('/')[2];\n      let f = activity[i+1];\n      h[d] = c+1;\n      if (f) {\n        //console.log(item, activity[i+1]);\n        if (d != f.split(' ')[0].split('/')[2]) {\n          c = 0;\n        }else {\n          c++\n        }\n      }\n      return h\n    });\n    setData(sd[0]);\n  }, [1])\n\n\n\n  useEffect(() => {\n    day.forEach((item, i) => {\n      if (data) {\n        let xX = 10*(item.x), yY = 10*(item.y);\n        for (var j = 0; j < Object.keys(data).length; j++) {\n          if (xX == 10*(Object.keys(data)[j])) {\n            if (!pLine[i]) {\n              pLine.push({x:xX, y:10*(100-Object.values(data)[j])})\n            }\n          }else {\n            if (!pLine[i]) {\n              pLine.push({x:xX, y:yY})\n            }\n          }\n        }\n      }\n    });\n    if (pLine != '') {\n      setG(pLine);\n      console.log(pLine);\n    }\n  }, [data])\n\n  return (\n    <>\n      <svg className=\"activityDiag\" width={210} height={100}>\n        <PathLine\n         className=\"activityLine\"\n         points={g}\n         stroke=\"#00897B\"\n         strokeWidth=\"3\"\n         fill=\"none\"\n         strokeLinecap=\"round\"\n         r={5}\n         />\n      </svg>\n      <h1></h1>\n      </>\n  );\n}\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}